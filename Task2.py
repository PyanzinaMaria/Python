#В координатной сетке дана точка (x, y), представленная парой натуральных чисел,
# и нужно из нее добраться до точки (0,0). Задача состоит в том, чтобы подсчитать,
# сколькими возможными путями можно достичь начала координат (0,0), выполняя шаги
# влево или вниз. Напишите функцию, подсчитывающую наибольшее количество таких путей,
# не пересекающих точки с координатами в запретном списке. На входе даются x и y – координаты
# исходной точки, а tabu – список точек с запретными координатами.

def count_paths(x: int, y: int, tabu: list) -> int:
    tabu_set = set(tabu)

    # таблица для хранения количества путей
    paths = [[0] * (y + 1) for _ in range(x + 1)]

    # Начальная точка (0, 0) всегда имеет один путь
    if (0, 0) not in tabu_set:
        paths[0][0] = 1

    # первый столбец
    for i in range(1, x + 1):
        if (i, 0) not in tabu_set:
            paths[i][0] = paths[i - 1][0]

    # первая строка
    for j in range(1, y + 1):
        if (0, j) not in tabu_set:
            paths[0][j] = paths[0][j - 1]

    # оставшаяся таблица
    for i in range(1, x + 1):
        for j in range(1, y + 1):
            if (i, j) not in tabu_set:
                paths[i][j] = paths[i - 1][j] + paths[i][j - 1]

    return paths[x][y]

print("x=3, y=2, tabu=[]", count_paths(3, 2, []))
print("x=1, y=6, tabu=[(7,1), (4,4)]", count_paths(1, 6, [(7, 1), (4, 4)]))
print("x=8, y=8, tabu=[(9,10), (1,4)]", count_paths(8, 8, [(9, 10), (1, 4)]))
print("x=7, y=5, tabu=[(6,8)]", count_paths(7, 5, [(6, 8)]))
